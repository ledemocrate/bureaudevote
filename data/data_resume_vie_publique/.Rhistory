#LIBRAIRIE UTILISEE
library(jsonlite)  # Pour ouvrir fichier json
library(stringr)   # Pour manipuler les caracteres
library(tidyverse) # Pour avoir tout l'univers tidy (coutau-suisse de R)
#CHARGEMENT DES DONNEES VOTE
# Endroit ou vous mettez les fichiers json en telechargeant sous le lien
setwd(".~/projetDemocratie/data/data_vote/")
#CHARGEMENT DES DONNEES VOTE
# Endroit ou vous mettez les fichiers json en telechargeant sous le lien
setwd("./projetDemocratie/data/data_vote/")
#CHARGEMENT DES DONNEES VOTE
# Endroit ou vous mettez les fichiers json en telechargeant sous le lien
setwd("/home/gollentw/Documents/Github/projetDemocratie/data/data_vote/")
#CHARGEMENT DES DONNEES VOTE
# Endroit ou vous mettez les fichiers json en telechargeant sous le lien
setwd("/home/gollentw/Documents/Github/projetDemocratie/data/data_vote/")
#CHARGEMENT DES DONNEES VOTE
# Endroit ou vous mettez les fichiers json en telechargeant sous le lien
setwd("/home/gollentw/Documents/GitHub/projetDemocratie/data/data_vote/")
#CHARGEMENT DES DONNEES VOTE
# Endroit ou vous mettez les fichiers json en telechargeant sous le lien
setwd("/home/gollentw/Documents/GitHub/projetDemocratie/data/data_vote/")
#Endroit ou telecharger les données
url <- "http://data.assemblee-nationale.fr/static/openData/repository/15/loi/scrutins/Scrutins_XV.json.zip"
download.file(url, destfile = basename(url))
#Fichier zip donc dezippage
unzip("Scrutins_XV.json.zip")
#L'archive ne nous sert plus à grand chose
file.remove("Scrutins_XV.json.zip")
#On se place là où les données sont (càd un niveau inférieur)
setwd("/home/gollentw/Documents/ScriptR/projetDemocratie/data/data_vote/json")
#On recupere la liste des fichiers
liste_vote <- list.files()
#Fonction visant pour chaque fichier de la liste a recuperer les informations
read_data <- function(liste){
#On lit le fichier de la liste
vote <- fromJSON(liste, flatten=TRUE)
#On récupère les données de vote CONTRE et on crée un data set
vote_contre_intermediaire <- bind_rows(vote[["scrutin"]][["ventilationVotes"]][["organe"]][["groupes"]][["groupe"]][["vote.decompteNominatif.contres.votant"]])
vote_contre_code <- rep(0.0,nrow(vote_contre_intermediaire))
vote_contre <- data_frame(vote_contre_code,vote_contre_intermediaire$acteurRef)
names(vote_contre) <- c("vote_code","depute_code")
#On récupère les données de vote POUR et on crée un data set
vote_pour_intermediaire <- bind_rows(vote[["scrutin"]][["ventilationVotes"]][["organe"]][["groupes"]][["groupe"]][["vote.decompteNominatif.pours.votant"]])
vote_pour_code <- rep(1.0,nrow(vote_pour_intermediaire))
vote_pour <- data_frame(vote_pour_code,vote_pour_intermediaire$acteurRef)
names(vote_pour) <- c("vote_code","depute_code")
#On récupère les données de vote ABSTENTION et on crée un data set
vote_abstention_intermediaire <- bind_rows(vote[["scrutin"]][["ventilationVotes"]][["organe"]][["groupes"]][["groupe"]][["vote.decompteNominatif.abstentions.votant"]])
vote_abstention_code <- rep(0.5,nrow(vote_abstention_intermediaire))
vote_abstention <- data_frame(vote_abstention_code,vote_abstention_intermediaire$acteurRef)
names(vote_abstention) <- c("vote_code","depute_code")
#On lie les trois data.sets
vote_1 <- rbind(vote_contre,vote_pour,vote_abstention)
#On replique pour chaque vote les informations de la loi pour laquelle il vote
uid_loi <- rep(vote[["scrutin"]][["numero"]],nrow(vote_1))
date_vote <- rep(vote[["scrutin"]][["dateScrutin"]],nrow(vote_1))
data <- data_frame(date_vote,vote_1,uid_loi)
return(data)
}
#Application de la fonction pour chaque fichier de la liste
vote <- lapply(liste_vote, read_data)
warnings()
#Creation d'un data.frame
vote <- bind_rows(vote)
#On verifie la coherence
head(vote,1000)
#Version matrice
vote_final_v1 <- vote[,-1] %>%
pivot_wider(
names_from = uid_loi,
values_from = vote_code
)
View(vote_final_v1)
#CHARGEMENT DES DONNEES DEPUTE
# Endroit ou vous mettez le fichier csv en telechargeant sous le lien
setwd("/home/gollentw/Documents/ScriptR/projetDemocratie/data/data_depute/")
#Endroit ou telecharger les données
url <- "https://www.data.gouv.fr/fr/datasets/r/092bd7bb-1543-405b-b53c-932ebb49bb8e"
download.file(url, destfile = basename(url))
#On lit le fichier
depute_plus_file <- list.files()[1]
depute_plus <- read.csv(depute_plus_file)
#On change le nom de la colonne sur laquelle on va joindre
names(depute_plus)[1] <- "depute_code"
#CROISEMENT DES DONNEES VOTE/DEPUTE++ par depute_code pour avoir des données exhaustives
vote_final <- merge(vote, depute_plus, by = "depute_code",all.x=TRUE)  %>%
select(vote_code,uid_loi,depute_code,
nom,prenom,
experienceDepute,job,groupeAbrev,naissance,departementNom) %>%
mutate(vote_code = as.factor(vote_code),
nom = as.factor(nom),
prenom = as.factor(prenom),
experienceDepute = as.numeric(str_extract(experienceDepute,"\\b([0-9]|[1-9][0-9]|100)\\b")),
job = as.factor(job),
groupeAbrev = as.factor(groupeAbrev),
naissance = as.Date(naissance),
nom_prenom = paste(nom," ",prenom))
rm(list=c("depute_plus","vote","depute_plus_file","liste_vote","url","read_data"))
View(vote_final)
#CROISEMENT DES DONNEES VOTE/DEPUTE++ par depute_code pour avoir des données exhaustives
vote_final <- merge(vote, depute_plus, by = "depute_code",all.x=TRUE)  %>%
select(vote_code,uid_loi,depute_code,
nom,prenom,
experienceDepute,job,groupeAbrev,naissance,departementNom) %>%
mutate(vote_code = as.factor(vote_code),
nom = as.factor(nom),
prenom = as.factor(prenom),
experienceDepute = as.numeric(str_extract(experienceDepute,"\\b([0-9]|[1-9][0-9]|100)\\b")),
job = as.factor(job),
groupeAbrev = as.factor(groupeAbrev),
naissance = as.Date(naissance),
nom_prenom = paste(nom," ",prenom)) %>%
select(vote_code,uid_loi,depute_code,
experienceDepute,job,groupeAbrev,naissance,departementNom)
#Application de la fonction pour chaque fichier de la liste
vote <- lapply(liste_vote, read_data)
#On se place là où les données sont (càd un niveau inférieur)
setwd("/home/gollentw/Documents/ScriptR/projetDemocratie/data/data_vote/json")
#On recupere la liste des fichiers
liste_vote <- list.files()
#Fonction visant pour chaque fichier de la liste a recuperer les informations
read_data <- function(liste){
#On lit le fichier de la liste
vote <- fromJSON(liste, flatten=TRUE)
#On récupère les données de vote CONTRE et on crée un data set
vote_contre_intermediaire <- bind_rows(vote[["scrutin"]][["ventilationVotes"]][["organe"]][["groupes"]][["groupe"]][["vote.decompteNominatif.contres.votant"]])
vote_contre_code <- rep(0.0,nrow(vote_contre_intermediaire))
vote_contre <- data_frame(vote_contre_code,vote_contre_intermediaire$acteurRef)
names(vote_contre) <- c("vote_code","depute_code")
#On récupère les données de vote POUR et on crée un data set
vote_pour_intermediaire <- bind_rows(vote[["scrutin"]][["ventilationVotes"]][["organe"]][["groupes"]][["groupe"]][["vote.decompteNominatif.pours.votant"]])
vote_pour_code <- rep(1.0,nrow(vote_pour_intermediaire))
vote_pour <- data_frame(vote_pour_code,vote_pour_intermediaire$acteurRef)
names(vote_pour) <- c("vote_code","depute_code")
#On récupère les données de vote ABSTENTION et on crée un data set
vote_abstention_intermediaire <- bind_rows(vote[["scrutin"]][["ventilationVotes"]][["organe"]][["groupes"]][["groupe"]][["vote.decompteNominatif.abstentions.votant"]])
vote_abstention_code <- rep(0.5,nrow(vote_abstention_intermediaire))
vote_abstention <- data_frame(vote_abstention_code,vote_abstention_intermediaire$acteurRef)
names(vote_abstention) <- c("vote_code","depute_code")
#On lie les trois data.sets
vote_1 <- rbind(vote_contre,vote_pour,vote_abstention)
#On replique pour chaque vote les informations de la loi pour laquelle il vote
uid_loi <- rep(vote[["scrutin"]][["numero"]],nrow(vote_1))
date_vote <- rep(vote[["scrutin"]][["dateScrutin"]],nrow(vote_1))
data <- data_frame(date_vote,vote_1,uid_loi)
return(data)
}
#Application de la fonction pour chaque fichier de la liste
vote <- lapply(liste_vote, read_data)
warnings()
#Creation d'un data.frame
vote <- bind_rows(vote)
#On verifie la coherence
head(vote,1000)
#Version matrice (mal adapté)
vote_final_v1 <- vote[,-1] %>%
pivot_wider(
names_from = uid_loi,
values_from = vote_code
)
#CHARGEMENT DES DONNEES DEPUTE
# Endroit ou vous mettez le fichier csv en telechargeant sous le lien
setwd("/home/gollentw/Documents/ScriptR/projetDemocratie/data/data_depute/")
#Endroit ou telecharger les données
url <- "https://www.data.gouv.fr/fr/datasets/r/092bd7bb-1543-405b-b53c-932ebb49bb8e"
download.file(url, destfile = basename(url))
#On lit le fichier
depute_plus_file <- list.files()[1]
depute_plus <- read.csv(depute_plus_file)
#On change le nom de la colonne sur laquelle on va joindre
names(depute_plus)[1] <- "depute_code"
#CROISEMENT DES DONNEES VOTE/DEPUTE++ par depute_code pour avoir des données exhaustives
vote_final <- merge(vote, depute_plus, by = "depute_code",all.x=TRUE)  %>%
select(vote_code,uid_loi,depute_code,
nom,prenom,
experienceDepute,job,groupeAbrev,naissance,departementNom) %>%
mutate(vote_code = as.factor(vote_code),
nom = as.factor(nom),
prenom = as.factor(prenom),
experienceDepute = as.numeric(str_extract(experienceDepute,"\\b([0-9]|[1-9][0-9]|100)\\b")),
job = as.factor(job),
groupeAbrev = as.factor(groupeAbrev),
naissance = as.Date(naissance),
nom_prenom = paste(nom," ",prenom)) %>%
select(vote_code,uid_loi,depute_code,
experienceDepute,job,groupeAbrev,naissance,departementNom)
View(vote_final)
#CROISEMENT DES DONNEES VOTE/DEPUTE++ par depute_code pour avoir des données exhaustives
vote_final <- merge(vote, depute_plus, by = "depute_code",all.x=TRUE)  %>%
select(vote_code,uid_loi,depute_code,
nom,prenom,
experienceDepute,job,groupeAbrev,naissance,departementNom) %>%
mutate(vote_code = as.factor(vote_code),
nom = as.factor(nom),
prenom = as.factor(prenom),
experienceDepute = as.numeric(str_extract(experienceDepute,"\\b([0-9]|[1-9][0-9]|100)\\b")),
job = as.factor(job),
groupeAbrev = as.factor(groupeAbrev),
naissance = as.Date(naissance),
nom_prenom = paste(nom," ",prenom)) %>%
select(vote_code,uid_loi,depute_code,nom_prenom,
experienceDepute,job,groupeAbrev,naissance,departementNom)
View(vote_final)
rm(list=c("depute_plus","vote","depute_plus_file","liste_vote","url","read_data"))
setwd("/home/gollentw/Documents/ScriptR/projetDemocratie/data/out/final")
write.csv(vote_final,"vote_final.csv")
write.csv(vote_final_v1,"vote_final_v1.csv")
library(rvest) #Pour le web scrapping
library(stringr) #Pour la manipulation textuelle
library(tidyverse) #Couteau suisse
library(purrr) #Pour certaine fonction
library(readtext)
# Vérifié manuellement que la sequence_offset prend bien en compte l'ensemble des pages
sequence_offset <- c(1,c(1:37)*100)
#Fonction permettant de récupérer les données d'une page
function_get_url_dosier_scrutin <- function(url){
print(url)
url_prov <- paste0("https://www2.assemblee-nationale.fr/scrutins/liste/(offset)/",
url,
"/(legislature)/15/(type)/SOR/(idDossier)/TOUS")
scrutins <- read_html(url_prov)
prov<- scrutins %>% html_nodes("td")%>%
html_text2()
prov <- prov[-c(1:3)]
url_dossier_associe_prov<- scrutins %>% html_nodes("a")%>%
html_attr('href')
url_dossier_associe <- c()
url_dossier_associe1 <- url_dossier_associe_prov[str_detect(url_dossier_associe_prov, "^https://www.assemblee-nationale.fr/dyn/15/dossiers/")]
if(!is_empty(url_dossier_associe1)){
url_dossier_associe1 <- paste0(url_dossier_associe1,"?etape=15-AN1-DEPOT",sep="")
url_dossier_associe <- c(url_dossier_associe,url_dossier_associe1)
}
url_dossier_associe2 <- url_dossier_associe_prov[str_detect(url_dossier_associe_prov, "^https://www.assemblee-nationale.fr/dyn/14/dossiers/")]
if(!is_empty(url_dossier_associe2)){
url_dossier_associe1 <- paste0(url_dossier_associe2,"?etape=15-AN1-DEPOT",sep="")
url_dossier_associe <- c(url_dossier_associe,url_dossier_associe2)
}
url_dossier_associe3 <- url_dossier_associe_prov[str_detect(url_dossier_associe_prov, "^https://www.assemblee-nationale.fr/15/dossiers/")]
if(!is_empty(url_dossier_associe3)){
url_dossier_associe1 <- paste0(url_dossier_associe3,"?etape=15-AN1-DEPOT",sep="")
url_dossier_associe <- c(url_dossier_associe,url_dossier_associe3)
}
variable1 <- rep(1,100)
variable2 <- rep(2,100)
variable3 <- rep(3,100)
variable4 <- rep(4,100)
variable5 <- rep(5,100)
variable6 <- rep(6,100)
for(i in 2:100){
variable1[i] <- variable1[i-1]+6
variable2[i] <- variable2[i-1]+6
variable3[i] <- variable3[i-1]+6
variable4[i] <- variable4[i-1]+6
variable5[i] <- variable5[i-1]+6
variable6[i] <- variable6[i-1]+6
}
scrutin_numero <- prov[variable1]
date_scrutin <- prov[variable2]
resume_legislatif_associe <- prov[variable3]
scrutin_dossier_data_prov <- data.frame(scrutin_numero,date_scrutin,resume_legislatif_associe)
scrutin_dossier_data_prov <- scrutin_dossier_data_prov[str_detect(scrutin_dossier_data_prov$resume_legislatif_associe,"dossier"),]
scrutin_dossier_data <- data.frame(scrutin_dossier_data_prov,url_dossier_associe)
return(scrutin_dossier_data)
}
#Application de la fonction pour chaque page
dossier_scrutin <- lapply(sequence_offset,function_get_url_dosier_scrutin)
#Création d'un data.frame
dossier_scrutin <- bind_rows(dossier_scrutin)
View(dossier_scrutin)
#On s'assure du type de certaine variable
dossier_scrutin$url_dossier_associe <- as.character(dossier_scrutin$url_dossier_associe)
head(dossier_scrutin)
##########################Exception a la page 3800################################
url_prov <- paste0("https://www2.assemblee-nationale.fr/scrutins/liste/(offset)/",
"1",
"/(legislature)/15/(type)/SOR/(idDossier)/TOUS")
scrutins <- read_html(url_prov)
prov<- scrutins %>% html_nodes("td")%>%
html_text2()
prov <- prov[-c(1:3)]
url_dossier_associe_prov<- scrutins %>% html_nodes("a")%>%
html_attr('href')
url_dossier_associe <- c()
url_dossier_associe1 <- url_dossier_associe_prov[str_detect(url_dossier_associe_prov, "^https://www.assemblee-nationale.fr/dyn/15/dossiers/")]
if(!is_empty(url_dossier_associe1)){
url_dossier_associe1 <- paste0(url_dossier_associe1,"?etape=15-AN1-DEPOT",sep="")
url_dossier_associe <- c(url_dossier_associe,url_dossier_associe1)
}
url_dossier_associe2 <- url_dossier_associe_prov[str_detect(url_dossier_associe_prov, "^https://www.assemblee-nationale.fr/dyn/14/dossiers/")]
if(!is_empty(url_dossier_associe2)){
url_dossier_associe1 <- paste0(url_dossier_associe2,"?etape=15-AN1-DEPOT",sep="")
url_dossier_associe <- c(url_dossier_associe,url_dossier_associe2)
}
url_dossier_associe3 <- url_dossier_associe_prov[str_detect(url_dossier_associe_prov, "^https://www.assemblee-nationale.fr/15/dossiers/")]
if(!is_empty(url_dossier_associe3)){
url_dossier_associe1 <- paste0(url_dossier_associe3,"?etape=15-AN1-DEPOT",sep="")
url_dossier_associe <- c(url_dossier_associe,url_dossier_associe3)
}
variable1 <- rep(1,35)
variable2 <- rep(2,35)
variable3 <- rep(3,35)
variable4 <- rep(4,35)
variable5 <- rep(5,35)
variable6 <- rep(6,35)
for(i in 2:35){
variable1[i] <- variable1[i-1]+6
variable2[i] <- variable2[i-1]+6
variable3[i] <- variable3[i-1]+6
variable4[i] <- variable4[i-1]+6
variable5[i] <- variable5[i-1]+6
variable6[i] <- variable6[i-1]+6
}
scrutin_numero <- prov[variable1]
date_scrutin <- prov[variable2]
resume_legislatif_associe <- prov[variable3]
scrutin_dossier_data_prov <- data.frame(scrutin_numero,date_scrutin,resume_legislatif_associe)
scrutin_dossier_data_prov <- scrutin_dossier_data_prov[str_detect(scrutin_dossier_data_prov$resume_legislatif_associe,"dossier"),]
scrutin_dossier_data <- data.frame(scrutin_dossier_data_prov,url_dossier_associe)
#######################
dossier_scrutin <- unique(rbind(dossier_scrutin,scrutin_dossier_data))
View(scrutin_dossier_data_prov)
View(dossier_scrutin)
##########################Exception a la page 3800################################
url_prov <- paste0("https://www2.assemblee-nationale.fr/scrutins/liste/(offset)/",
"3800",
"/(legislature)/15/(type)/SOR/(idDossier)/TOUS")
scrutins <- read_html(url_prov)
prov<- scrutins %>% html_nodes("td")%>%
html_text2()
prov <- prov[-c(1:3)]
url_dossier_associe_prov<- scrutins %>% html_nodes("a")%>%
html_attr('href')
url_dossier_associe <- c()
url_dossier_associe1 <- url_dossier_associe_prov[str_detect(url_dossier_associe_prov, "^https://www.assemblee-nationale.fr/dyn/15/dossiers/")]
if(!is_empty(url_dossier_associe1)){
url_dossier_associe1 <- paste0(url_dossier_associe1,"?etape=15-AN1-DEPOT",sep="")
url_dossier_associe <- c(url_dossier_associe,url_dossier_associe1)
}
url_dossier_associe2 <- url_dossier_associe_prov[str_detect(url_dossier_associe_prov, "^https://www.assemblee-nationale.fr/dyn/14/dossiers/")]
if(!is_empty(url_dossier_associe2)){
url_dossier_associe1 <- paste0(url_dossier_associe2,"?etape=15-AN1-DEPOT",sep="")
url_dossier_associe <- c(url_dossier_associe,url_dossier_associe2)
}
url_dossier_associe3 <- url_dossier_associe_prov[str_detect(url_dossier_associe_prov, "^https://www.assemblee-nationale.fr/15/dossiers/")]
if(!is_empty(url_dossier_associe3)){
url_dossier_associe1 <- paste0(url_dossier_associe3,"?etape=15-AN1-DEPOT",sep="")
url_dossier_associe <- c(url_dossier_associe,url_dossier_associe3)
}
variable1 <- rep(1,35)
variable2 <- rep(2,35)
variable3 <- rep(3,35)
variable4 <- rep(4,35)
variable5 <- rep(5,35)
variable6 <- rep(6,35)
for(i in 2:35){
variable1[i] <- variable1[i-1]+6
variable2[i] <- variable2[i-1]+6
variable3[i] <- variable3[i-1]+6
variable4[i] <- variable4[i-1]+6
variable5[i] <- variable5[i-1]+6
variable6[i] <- variable6[i-1]+6
}
scrutin_numero <- prov[variable1]
date_scrutin <- prov[variable2]
resume_legislatif_associe <- prov[variable3]
scrutin_dossier_data_prov <- data.frame(scrutin_numero,date_scrutin,resume_legislatif_associe)
scrutin_dossier_data_prov <- scrutin_dossier_data_prov[str_detect(scrutin_dossier_data_prov$resume_legislatif_associe,"dossier"),]
scrutin_dossier_data <- data.frame(scrutin_dossier_data_prov,url_dossier_associe)
#######################
dossier_scrutin <- unique(rbind(dossier_scrutin,scrutin_dossier_data))
#Fonction permettant de récupérer l'adresse du texte initale de loi à partir de l'adresse du dossier associé
fonction_url_texte_loi <- function(url){
print(url)
resume_loi_url <- read_html(url) %>% html_nodes("a")%>%
html_attr('href') %>%
as_tibble() %>%
mutate_at("value", str_match, pattern="https://www.assemblee-nationale.fr/15/propositions/.*$|https://www.assemblee-nationale.fr/15/projets/.*$") %>%
na.omit() %>%
unique()
resume_loi_url <- resume_loi_url[1,1]
resume_loi_url <- data.frame(url,resume_loi_url)
return(resume_loi_url)
}
#Certaine page n'existe pas, cela cause un problème,
#On s'assure donc que le fait d'avoir d'un probleme n'empeche pas la continuation de l'application de la fonction
fonction_url_texte_loi <- possibly(fonction_url_texte_loi, otherwise = FALSE)
#Application de la fonction pour chaque dossier legislatif
url_texte_loi <- lapply(unique(dossier_scrutin$url_dossier_associe),fonction_url_texte_loi)
#On s'assure du type de certaine variable
url_texte_loi$value <- as.character(url_texte_loi$value)
#Fonction permettant de récupérer l'adresse du texte de loi publié au JO à partir de l'adresse du dossier associé
fonction_url_texte_loi_JO <- function(url){
print(url)
resume_loi_url <- read_html(url) %>% html_nodes("a")%>%
html_attr('href') %>%
as_tibble() %>%
mutate_at("value", str_match, pattern="http://www.legifrance.gouv.fr/.*$") %>%
na.omit() %>%
unique()
resume_loi_url <- resume_loi_url[1,1]
resume_loi_url <- data.frame(url,resume_loi_url)
return(resume_loi_url)
}
#Certaine page n'existe pas, cela cause un problème,
#On s'assure donc que le fait d'avoir d'un probleme n'empeche pas la continuation de l'application de la fonction
fonction_url_texte_loi_JO <- possibly(fonction_url_texte_loi_JO, otherwise = FALSE)
#Application de la fonction pour chaque dossier legislatif
url_texte_loi_JO <- lapply(unique(dossier_scrutin$url_dossier_associe),fonction_url_texte_loi_JO)
#On supprime les fois où la fonction n'a rien récupérer
url_texte_loi_JO <- url_texte_loi_JO[lapply(url_texte_loi_JO, isFALSE) == FALSE]
url_texte_loi_JO <- bind_rows(na.omit(url_texte_loi_JO))
#On s'assure du type de certaine variable
url_texte_loi_JO$value <- as.character(url_texte_loi_JO$value)
names(url_texte_loi)[1] <- "url_dossier_associe"
names(url_texte_loi)[2] <- "texte_loi"
names(url_texte_loi_JO)[1] <- "url_dossier_associe"
names(url_texte_loi_JO)[2] <- "texte_loi_JO"
data_loi <- merge(dossier_scrutin,url_texte_loi,by="url_dossier_associe",all.x = TRUE)
data_loi <- merge(data_loi,url_texte_loi_JO,by="url_dossier_associe",all.x = TRUE) %>%
mutate(nom_loi = str_replace_all(
str_remove(
str_remove(
str_remove(
str_remove(
str_remove(
str_remove(url_dossier_associe,"https://www.assemblee-nationale.fr/15/dossiers/")
,"https://www.assemblee-nationale.fr/dyn/14/dossiers/")
,".asp")
,"https://www.assemblee-nationale.fr/dyn/15/dossiers/")
,"etape=15-AN1-DEPOT")
,"https:www.assemblee-nationale.fr/dyn/14/dossiers/")
,"[[:punct:]]", " ")) %>%
rename(uid_loi  = scrutin_numero)
nom_loi <- as.data.frame(unique(data_loi$nom_loi))
names(nom_loi)[1] <- "nom_loi"
setwd("/home/gollentw/Documents/ScriptR/projetDemocratie/data/data_loi/")
write_csv(nom_loi,"nom_loi.csv")
write_csv(data_loi,"data_loi.csv")
View(scrutin_dossier_data)
names(url_texte_loi)[1] <- "url_dossier_associe"
names(url_texte_loi)[2] <- "texte_loi"
names(url_texte_loi_JO)[1] <- "url_dossier_associe"
names(url_texte_loi_JO)[2] <- "texte_loi_JO"
data_loi <- merge(dossier_scrutin,url_texte_loi,by="url_dossier_associe",all.x = TRUE)
View(dossier_scrutin)
View(dossier_scrutin)
#On crée un data.frame
url_texte_loi <- bind_rows(na.omit(url_texte_loi))
#On supprime les fois où la fonction n'a rien récupérer
url_texte_loi <- url_texte_loi[lapply(url_texte_loi, isFALSE) == FALSE]
#On crée un data.frame
url_texte_loi <- bind_rows(na.omit(url_texte_loi))
#Certaine page n'existe pas, cela cause un problème,
#On s'assure donc que le fait d'avoir d'un probleme n'empeche pas la continuation de l'application de la fonction
fonction_url_texte_loi <- possibly(fonction_url_texte_loi, otherwise = FALSE)
#Application de la fonction pour chaque dossier legislatif
url_texte_loi <- lapply(unique(dossier_scrutin$url_dossier_associe),fonction_url_texte_loi)
#On supprime les fois où la fonction n'a rien récupérer
url_texte_loi <- url_texte_loi[lapply(url_texte_loi, isFALSE) == FALSE]
#On crée un data.frame
url_texte_loi <- bind_rows(na.omit(url_texte_loi))
#On s'assure du type de certaine variable
url_texte_loi$value <- as.character(url_texte_loi$value)
names(url_texte_loi)[1] <- "url_dossier_associe"
names(url_texte_loi)[2] <- "texte_loi"
names(url_texte_loi_JO)[1] <- "url_dossier_associe"
names(url_texte_loi_JO)[2] <- "texte_loi_JO"
data_loi <- merge(dossier_scrutin,url_texte_loi,by="url_dossier_associe",all.x = TRUE)
data_loi <- merge(data_loi,url_texte_loi_JO,by="url_dossier_associe",all.x = TRUE) %>%
mutate(nom_loi = str_replace_all(
str_remove(
str_remove(
str_remove(
str_remove(
str_remove(
str_remove(url_dossier_associe,"https://www.assemblee-nationale.fr/15/dossiers/")
,"https://www.assemblee-nationale.fr/dyn/14/dossiers/")
,".asp")
,"https://www.assemblee-nationale.fr/dyn/15/dossiers/")
,"etape=15-AN1-DEPOT")
,"https:www.assemblee-nationale.fr/dyn/14/dossiers/")
,"[[:punct:]]", " ")) %>%
rename(uid_loi  = scrutin_numero)
View(data_loi)
nom_loi <- as.data.frame(unique(data_loi$nom_loi))
names(nom_loi)[1] <- "nom_loi"
setwd("/home/gollentw/Documents/ScriptR/projetDemocratie/data/data_loi/")
write_csv(nom_loi,"nom_loi.csv")
write_csv(data_loi,"data_loi.csv")
data_democratie <- merge(vote_final ,data_loi,by="uid_loi",all.x = TRUE)
setwd("/home/gollentw/Documents/ScriptR/projetDemocratie/data/data_resume_vie_publique")
liste <- list.files()
fonction_recuperation_vie_publique_resume <- function(data){
result <- data.frame(data,read_file(data))
return(result)
}
vie_publique_resume <- lapply(liste,fonction_recuperation_vie_publique_resume)
vie_publique_resume <- bind_rows(vie_publique_resume)
names(vie_publique_resume) <- c("nom_loi","resume_vie_publique")
data_democratie_plus <- merge(data_democratie,vie_publique_resume,by="nom_loi",all.x=TRUE)
